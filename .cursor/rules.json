{
    "agentRole": "AI-Developer-Agent",
    "description": "Правила и инструкции для ИИ-агента, выполняющего задачи разработки ПО согласно проектной документации с использованием .mdc файлов и соблюдением лучших практик.",
    "generalRules": [
      "Всегда соблюдай принципы SOLID, DRY, KISS.",
      "Код должен быть читаемым, поддерживаемым и документированным.",
      "Следуй корпоративным стандартам кодирования (lint, форматирование).",
      "Покрытие кода юнит-тестами должно быть не менее 80%.",
      "Используй паттерны проектирования, если они оправданы.",
      "Минимизируй влияние изменений на существующую систему.",
      "Весь код должен сопровождаться комментариями к сложной логике.",
      "Не оставляй 'магических чисел' и строк — используй константы.",
      "Используй статический анализатор кода (например, SonarQube).",
      "Обеспечивай логирование ошибок и важных событий.",
      "В коде не должно быть временных заглушек или 'todo'.",
      "В проекте не должно быть дублирования логики или файлов, дублирующих друг-друга - проверяй перед созданием нового файла."
    ],
    "taskRules": [
      "Задачи храняться в папке tasks/",
      "В начале выполнения задач проверить наличие tasks/dev_plan.md, если его нет - создать, для каждой задачи указать номер и название, короткое описание, статус, зависимости",
      "В конце выполнения задач проверить наличие tasks/dev_plan.md и отметить статус задачи и краткое резюме.",
      "При получении задания на выполнение задачи сверится с планом, скорректировать статус на В работе",
      "Запрашивай подтверждение выполнения задачи у пользователя и только потом присваивай конечный статус."
    ],
    "developmentRules": [
      "Используй при разработке rules/develop_ai_agent_rules.mdc"
    ],
    "bugfixingRules": [
      "Определи причину ошибки перед внесением изменений.",
      "Вноси минимальные исправления, чтобы не нарушить существующий функционал.",
      "Покрывай багфиксы тестами на регрессию.",
      "Добавляй комментарии к исправленному коду с указанием причины и решения.",
      "Проверяй, что исправление не влияет на производительность.",
      "Используй при багфиксинге rules/bugfixing_ai_agent_rules.mdc"
    ],
    "testingRules": [
      "Пиши юнит-тесты, интеграционные и e2e тесты там, где это необходимо.",
      "Храни файлы тестов в папке tests/",
      "Тесты должны быть изолированными и повторяемыми.",
      "Используй мок-объекты для внешних зависимостей.",
      "Обеспечь автоматический запуск тестов в CI/CD.",
      "Отчёты о покрытии тестами должны быть доступны после каждого запуска."
    ],
    "commitRules": [
      "Каждый коммит должен содержать номер задачи из AI-Executable Project Plan.",
      "Сообщение коммита должно быть информативным и кратким.",
      "Перед коммитом запускай все тесты и проверяй статический анализ.",
      "Не коммить незавершённый или неработающий код."
    ],
    "securityRules": [
      "Не хранить конфиденциальные данные в коде.",
      "Использовать безопасные методы аутентификации и авторизации.",
      "Валидация всех входных данных на уровне API и бизнес-логики.",
      "Обработка и логирование попыток несанкционированного доступа."
    ],
    "performanceRules": [
      "Оптимизировать критичные участки кода.",
      "Избегать ненужных запросов к базе данных.",
      "Использовать кеширование там, где возможно.",
      "Проводить нагрузочное тестирование по необходимости."
    ],
    "communication": {
      "logging": "Логируй все важные события и ошибки с подробной информацией.",
      "reporting": "По окончании каждой задачи формируй отчёт с результатами и статусом в файле project_docs/dev_plan.md.",
      "questions": "Если требования задачи не ясны — задавай уточняющие вопросы."
    },
    "documentationRules": [
      "Файлы документации должны быть актуальны, уникальны, избыточны, не дублироваться, храниться в папке docs/."
    ]
}
  
  